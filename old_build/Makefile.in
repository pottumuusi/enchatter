ECHO=@$$(which echo)

ALL_TARGETS := app
ALL_TARGETS :+ tests

# Assign variables created by configure (all lowercase) to Make variables.
ROOT_DIR := $(repo_root)

OUT_DIR := $(ROOT_DIR)/out
BIN_DIR := $(OUT_DIR)/bin
LIB_DIR := $(ROOT_DIR)/lib
SRC_DIR := $(ROOT_DIR)/src
APP_DIR := $(SRC_DIR)/app
TEST_DIR := $(SRC_DIR)/test

ENCHATTER_BIN := $(BIN_DIR)/enchatter

# REPO_NAME := omnichat
REPO_NAME := enchatter

GLOBAL_ENCHATTER_LINK_PATH := /usr/local/bin/enchatter

# Make does not consider implicit rules for PHONY targets
.PHONY: all clean testrun install uninstall clean-app clean-enchatter $(ALL_TARGETS)

define subproject_make_with_common_attributes
	$(eval SUBPROJECT_NAME=$1)
	$(eval SUBPROJECT_PATH=$2)
	$(eval SUBPROJECT_TARGET=$3)
	$(eval PROJECT_OUT=$(OUT_DIR)/$(SUBPROJECT_NAME))

	echo "calling makefile of subproject, name: $(SUBPROJECT_NAME)"
	echo "calling makefile of subproject, path: $(SUBPROJECT_PATH)"
	echo "calling makefile of subproject, out: $(PROJECT_OUT)"

	$(MAKE) -C $(SUBPROJECT_PATH) \
		ROOTDIR=$(ROOT_DIR) \
		PROJECTROOT=$(SUBPROJECT_PATH) \
		PROJECTOUT=$(PROJECT_OUT) \
		OUTDIR=$(OUT_DIR) \
		$(SUBPROJECT_TARGET)
endef

define install_to_usr_local_bin
	$(call add_nontexistent_symlink, \
		$(ENCHATTER_BIN), $(GLOBAL_ENCHATTER_LINK_PATH))
endef

define usr_local_bin_uninstall
	rm $(GLOBAL_ENCHATTER_LINK_PATH)
endef

define add_nontexistent_symlink
	$(eval DESTINATION=$(1))
	$(eval PATH_TO_NEW_LINK=$(2))

	if [ ! -h "$(PATH_TO_NEW_LINK)" ] ; then \
		ln -s $(DESTINATION) $(PATH_TO_NEW_LINK); \
	fi
endef

define clear_vars
	$(eval JAVA_FILES=)
endef

define find_all_java_files_under
	$(eval FIND_DIR=$(1))

	$(info finding java files)
	$(eval JAVA_FILES=$(shell find $(FIND_DIR) -name "*.java"))
endef

all: $(ALL_TARGETS)

clean:
	if [ -d "$(OUT_DIR)" ] ; then rm -r $(OUT_DIR) ; fi
	if [ -d "$(BIN_DIR)" ] ; then rm -r $(BIN_DIR) ; fi

install:
	$(call install_to_usr_local_bin)
	# If installed binaries need a directory for data, consider adding
	# a hidden directory to home directory of user.

uninstall:
	$(call usr_local_bin_uninstall)

app: $(APP_DIR)
	$(call subproject_make_with_common_attributes, $@, $<, all)

clean-app:
	$(call subproject_make_with_common_attributes, app, $(APP_DIR), clean)

clean-enchatter:
	$(call subproject_make_with_common_attributes, app, $(APP_DIR), clean-enchatter)

tests:
	$(call clear_vars)
	$(call find_all_java_files_under, $(TEST_DIR))
	# find all test java files
	echo "building tests"

# Append slash to avoid circular common
# common: common/ 
# 	$(call subproject_make_with_common_attributes, $@)
# 
# concon: env/concon
# 	$(call subproject_make_with_common_attributes, $^)
